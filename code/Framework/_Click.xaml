<Activity mc:Ignorable="sap sap2010" x:Class="CustomFindElement" this:CustomFindElement.in_Timeout="2000" this:CustomFindElement.in_Focus="True" this:CustomFindElement.in_MaxRetry="3" this:CustomFindElement.in_Verification_Method="0" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_LogFile" Type="InArgument(x:String)" />
    <x:Property Name="in_Selector" Type="InArgument(x:String)" />
    <x:Property Name="in_Timeout" Type="InArgument(x:Int32)" />
    <x:Property Name="out_ElementExist" Type="OutArgument(x:Boolean)" />
    <x:Property Name="in_Element" Type="InArgument(ui:UiElement)" />
    <x:Property Name="in_Focus" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_MaxRetry" Type="InArgument(x:Int32)" />
    <x:Property Name="in_Verification_Method" Type="InArgument(x:Int32)" />
    <x:Property Name="in_Wait_for_Element" Type="InArgument(ui:UiElement)" />
  </x:Members>
  <this:CustomFindElement.in_Selector>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:CustomFindElement.in_Selector>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1103,1447</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>CustomFindElement_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="48">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Windows</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="60">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main" sap:VirtualizedContainerService.HintSize="619,1382" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Object" Name="attr_hasFocus" />
      <Variable x:TypeArguments="x:Int32" Name="retryCount" />
      <Variable x:TypeArguments="x:Boolean" Name="element_exists" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Logger workflow" sap:VirtualizedContainerService.HintSize="577,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\Logger.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_LogFile">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_LogFile" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;Clicking Element: &quot; + in_Selector + in_Element.Selector.ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:Boolean" x:Key="in_Verbose">
          <Literal x:TypeArguments="x:Boolean" Value="True" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign sap:VirtualizedContainerService.HintSize="577,60" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[out_elementExist]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="577,60" sap2010:WorkflowViewState.IdRef="Assign_8">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[retryCount]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[retryCount + 1]</InArgument>
      </Assign.Value>
    </Assign>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="577,786" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="539,559" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:Comment sap:VirtualizedContainerService.HintSize="497,55" sap2010:WorkflowViewState.IdRef="Comment_1" Text="// Case 0 : Default" />
          <ui:Comment sap:VirtualizedContainerService.HintSize="497,55" sap2010:WorkflowViewState.IdRef="Comment_2" Text="// Case 1 : Wait for element to vanish" />
          <ui:Comment sap:VirtualizedContainerService.HintSize="497,55" sap2010:WorkflowViewState.IdRef="Comment_3" Text="// Case 2 : Check for element" />
          <Switch x:TypeArguments="x:Int32" DisplayName="Switch" Expression="[in_verification_method]" sap:VirtualizedContainerService.HintSize="497,182" sap2010:WorkflowViewState.IdRef="Switch`1_1">
            <Sequence x:Key="0" DisplayName="Normal" sap:VirtualizedContainerService.HintSize="1139,760" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[Not in_Selector.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="1097,711" sap2010:WorkflowViewState.IdRef="If_1">
                <If.Then>
                  <Sequence DisplayName="Using Selectors" sap:VirtualizedContainerService.HintSize="526,553" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:UiElementExists DisplayName="Element Exists" Exists="[out_elementExist]" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                      <ui:UiElementExists.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="08aeab45-872a-4ec5-a5c6-67a18577e9bc" Selector="[in_Selector]" TimeoutMS="[in_Timeout]">
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:UiElementExists.Target>
                    </ui:UiElementExists>
                    <If Condition="[in_Focus]" sap:VirtualizedContainerService.HintSize="484,245" sap2010:WorkflowViewState.IdRef="If_2">
                      <If.Then>
                        <ui:SetFocus DelayBefore="{x:Null}" DelayMS="{x:Null}" DisplayName="Set Focus" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="SetFocus_2">
                          <ui:SetFocus.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3ef1eb5b-471d-434e-afdd-d0c25f7127c8" Selector="[in_Selector]" TimeoutMS="[in_Timeout]">
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:SetFocus.Target>
                        </ui:SetFocus>
                      </If.Then>
                    </If>
                    <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT">
                      <ui:Click.CursorPosition>
                        <ui:CursorPosition Position="Center">
                          <ui:CursorPosition.OffsetX>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetX>
                          <ui:CursorPosition.OffsetY>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetY>
                        </ui:CursorPosition>
                      </ui:Click.CursorPosition>
                      <ui:Click.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ba70d0d6-d036-48d1-b61e-11c89cb5d290" Selector="[in_Selector]" TimeoutMS="[in_Timeout]">
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:Click.Target>
                    </ui:Click>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Using Elements" sap:VirtualizedContainerService.HintSize="526,553" sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:UiElementExists DisplayName="Element Exists" Exists="[out_elementExist]" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
                      <ui:UiElementExists.Target>
                        <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[in_Element]" Id="08aeab45-872a-4ec5-a5c6-67a18577e9bc" TimeoutMS="[in_Timeout]">
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:UiElementExists.Target>
                    </ui:UiElementExists>
                    <If Condition="[in_Focus]" sap:VirtualizedContainerService.HintSize="484,245" sap2010:WorkflowViewState.IdRef="If_3">
                      <If.Then>
                        <ui:SetFocus DelayBefore="{x:Null}" DelayMS="{x:Null}" DisplayName="Set Focus" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="SetFocus_3">
                          <ui:SetFocus.Target>
                            <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[in_Element]" Id="3ef1eb5b-471d-434e-afdd-d0c25f7127c8" TimeoutMS="[in_Timeout]">
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:SetFocus.Target>
                        </ui:SetFocus>
                      </If.Then>
                    </If>
                    <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT">
                      <ui:Click.CursorPosition>
                        <ui:CursorPosition Position="Center">
                          <ui:CursorPosition.OffsetX>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetX>
                          <ui:CursorPosition.OffsetY>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetY>
                        </ui:CursorPosition>
                      </ui:Click.CursorPosition>
                      <ui:Click.Target>
                        <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[in_Element]" Id="d9f549f8-b958-4911-a872-330800b30163" TimeoutMS="[in_Timeout]">
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:Click.Target>
                    </ui:Click>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
            <Sequence x:Key="1" DisplayName="Wait for element vanish" sap:VirtualizedContainerService.HintSize="1259,1280" sap2010:WorkflowViewState.IdRef="Sequence_8">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InterruptibleDoWhile Condition="[element_exists AndAlso retryCount &lt;= in_MaxRetry]" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="1217,1228" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
                <ui:InterruptibleDoWhile.Body>
                  <Sequence sap:VirtualizedContainerService.HintSize="1181,1063" sap2010:WorkflowViewState.IdRef="Sequence_12">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Wait to vanish" sap:VirtualizedContainerService.HintSize="1139,801" sap2010:WorkflowViewState.IdRef="Sequence_11">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[Not in_Selector.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="1097,709" sap2010:WorkflowViewState.IdRef="If_6">
                        <If.Then>
                          <Sequence DisplayName="Using Selectors" sap:VirtualizedContainerService.HintSize="526,552" sap2010:WorkflowViewState.IdRef="Sequence_9">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:UiElementExists DisplayName="Element Exists" Exists="[out_elementExist]" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
                              <ui:UiElementExists.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="08aeab45-872a-4ec5-a5c6-67a18577e9bc" Selector="[in_Selector]" TimeoutMS="[in_Timeout]">
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:UiElementExists.Target>
                            </ui:UiElementExists>
                            <If Condition="[in_Focus]" sap:VirtualizedContainerService.HintSize="484,244" sap2010:WorkflowViewState.IdRef="If_4">
                              <If.Then>
                                <ui:SetFocus DelayBefore="{x:Null}" DelayMS="{x:Null}" DisplayName="Set Focus" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="SetFocus_4">
                                  <ui:SetFocus.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3ef1eb5b-471d-434e-afdd-d0c25f7127c8" Selector="[in_Selector]" TimeoutMS="[in_Timeout]">
                                      <ui:Target.WaitForReady>
                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                      </ui:Target.WaitForReady>
                                    </ui:Target>
                                  </ui:SetFocus.Target>
                                </ui:SetFocus>
                              </If.Then>
                            </If>
                            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ba70d0d6-d036-48d1-b61e-11c89cb5d290" Selector="[in_Selector]" TimeoutMS="[in_Timeout]">
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Using Elements" sap:VirtualizedContainerService.HintSize="526,552" sap2010:WorkflowViewState.IdRef="Sequence_10">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:UiElementExists DisplayName="Element Exists" Exists="[out_elementExist]" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="UiElementExists_4">
                              <ui:UiElementExists.Target>
                                <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[in_Element]" Id="08aeab45-872a-4ec5-a5c6-67a18577e9bc" TimeoutMS="[in_Timeout]">
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:UiElementExists.Target>
                            </ui:UiElementExists>
                            <If Condition="[in_Focus]" sap:VirtualizedContainerService.HintSize="484,244" sap2010:WorkflowViewState.IdRef="If_5">
                              <If.Then>
                                <ui:SetFocus DelayBefore="{x:Null}" DelayMS="{x:Null}" DisplayName="Set Focus" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="SetFocus_5">
                                  <ui:SetFocus.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[in_Element]" Id="3ef1eb5b-471d-434e-afdd-d0c25f7127c8" TimeoutMS="[in_Timeout]">
                                      <ui:Target.WaitForReady>
                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                      </ui:Target.WaitForReady>
                                    </ui:Target>
                                  </ui:SetFocus.Target>
                                </ui:SetFocus>
                              </If.Then>
                            </If>
                            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[in_Element]" Id="d9f549f8-b958-4911-a872-330800b30163" TimeoutMS="[in_Timeout]">
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                    <ui:UiElementExists DisplayName="Wait for this element to vanish" Exists="[element_exists]" sap:VirtualizedContainerService.HintSize="1139,68" sap2010:WorkflowViewState.IdRef="UiElementExists_5">
                      <ui:UiElementExists.Target>
                        <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[in_wait_for_element]" Id="59e499ae-2ea4-4d5a-b5bc-24cb4a9e9ff0">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:UiElementExists.Target>
                    </ui:UiElementExists>
                    <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="1139,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                  </Sequence>
                </ui:InterruptibleDoWhile.Body>
              </ui:InterruptibleDoWhile>
            </Sequence>
            <Sequence x:Key="2" DisplayName="Wait for element to appear" sap:VirtualizedContainerService.HintSize="1259,1280" sap2010:WorkflowViewState.IdRef="Sequence_17">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InterruptibleDoWhile Condition="[Not element_exists AndAlso retryCount &lt;= in_MaxRetry]" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="1217,1228" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_2">
                <ui:InterruptibleDoWhile.Body>
                  <Sequence sap:VirtualizedContainerService.HintSize="1181,1063" sap2010:WorkflowViewState.IdRef="Sequence_16">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Wait to vanish" sap:VirtualizedContainerService.HintSize="1139,801" sap2010:WorkflowViewState.IdRef="Sequence_15">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[Not in_Selector.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="1097,709" sap2010:WorkflowViewState.IdRef="If_9">
                        <If.Then>
                          <Sequence DisplayName="Using Selectors" sap:VirtualizedContainerService.HintSize="526,552" sap2010:WorkflowViewState.IdRef="Sequence_13">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:UiElementExists DisplayName="Element Exists" Exists="[out_elementExist]" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="UiElementExists_6">
                              <ui:UiElementExists.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="08aeab45-872a-4ec5-a5c6-67a18577e9bc" Selector="[in_Selector]" TimeoutMS="[in_Timeout]">
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:UiElementExists.Target>
                            </ui:UiElementExists>
                            <If Condition="[in_Focus]" sap:VirtualizedContainerService.HintSize="484,244" sap2010:WorkflowViewState.IdRef="If_7">
                              <If.Then>
                                <ui:SetFocus DelayBefore="{x:Null}" DelayMS="{x:Null}" DisplayName="Set Focus" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="SetFocus_6">
                                  <ui:SetFocus.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3ef1eb5b-471d-434e-afdd-d0c25f7127c8" Selector="[in_Selector]" TimeoutMS="[in_Timeout]">
                                      <ui:Target.WaitForReady>
                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                      </ui:Target.WaitForReady>
                                    </ui:Target>
                                  </ui:SetFocus.Target>
                                </ui:SetFocus>
                              </If.Then>
                            </If>
                            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ba70d0d6-d036-48d1-b61e-11c89cb5d290" Selector="[in_Selector]" TimeoutMS="[in_Timeout]">
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Using Elements" sap:VirtualizedContainerService.HintSize="526,552" sap2010:WorkflowViewState.IdRef="Sequence_14">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:UiElementExists DisplayName="Element Exists" Exists="[out_elementExist]" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="UiElementExists_7">
                              <ui:UiElementExists.Target>
                                <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[in_Element]" Id="08aeab45-872a-4ec5-a5c6-67a18577e9bc" TimeoutMS="[in_Timeout]">
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:UiElementExists.Target>
                            </ui:UiElementExists>
                            <If Condition="[in_Focus]" sap:VirtualizedContainerService.HintSize="484,244" sap2010:WorkflowViewState.IdRef="If_8">
                              <If.Then>
                                <ui:SetFocus DelayBefore="{x:Null}" DelayMS="{x:Null}" DisplayName="Set Focus" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="SetFocus_7">
                                  <ui:SetFocus.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[in_Element]" Id="3ef1eb5b-471d-434e-afdd-d0c25f7127c8" TimeoutMS="[in_Timeout]">
                                      <ui:Target.WaitForReady>
                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                      </ui:Target.WaitForReady>
                                    </ui:Target>
                                  </ui:SetFocus.Target>
                                </ui:SetFocus>
                              </If.Then>
                            </If>
                            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[in_Element]" Id="d9f549f8-b958-4911-a872-330800b30163" TimeoutMS="[in_Timeout]">
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                    <ui:UiElementExists DisplayName="Wait for this element to vanish" Exists="[element_exists]" sap:VirtualizedContainerService.HintSize="1139,68" sap2010:WorkflowViewState.IdRef="UiElementExists_8">
                      <ui:UiElementExists.Target>
                        <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[in_wait_for_element]" Id="59e499ae-2ea4-4d5a-b5bc-24cb4a9e9ff0">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:UiElementExists.Target>
                    </ui:UiElementExists>
                    <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="1139,22" sap2010:WorkflowViewState.IdRef="Delay_2" />
                  </Sequence>
                </ui:InterruptibleDoWhile.Body>
              </ui:InterruptibleDoWhile>
            </Sequence>
          </Switch>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="543,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[out_elementExist]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Logger workflow" sap:VirtualizedContainerService.HintSize="577,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Framework\Logger.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_LogFile">[in_LogFile]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">["Element Clicked: " + out_elementExist.ToString]</InArgument>
        <InArgument x:TypeArguments="x:Boolean" x:Key="in_Verbose">True</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>